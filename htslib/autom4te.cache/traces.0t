m4trace:configure.ac:26: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:26: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:26: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:26: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:26: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:26: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:26: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:26: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:32: -1- m4_include([m4/hts_prog_cc_warnings.m4])
m4trace:m4/hts_prog_cc_warnings.m4:27: -1- AC_DEFUN([HTS_PROG_CC_WARNINGS], [
  AC_ARG_ENABLE([warnings],
    [AS_HELP_STRING([--disable-warnings], [turn off compiler warnings])],
    [],
    [enable_warnings=yes])

  AS_IF([test "x$enable_warnings" != xno],[
    AC_REQUIRE([AC_PROG_GREP])

    ansi="$1"
    AS_IF([test "x$ansi" = "x"],
          [msg="for C compiler warning flags"],
          [msg="for C compiler warning and ANSI conformance flags"])

    AC_MSG_CHECKING($msg)
    AC_CACHE_VAL(hts_cv_prog_cc_warnings, [dnl
      hts_cv_prog_cc_warnings=""
      AS_IF([test "x$CC" != "x"],[
        cat > conftest.c <<EOF
int main(int argc, char **argv) { return 0; }
EOF

dnl Most compilers print some kind of a version string with some command
dnl line options (often "-V").  The version string should be checked
dnl before doing a test compilation run with compiler-specific flags.
dnl This is because some compilers (like the Cray compiler) only
dnl produce a warning message for unknown flags instead of returning
dnl an error, resulting in a false positive.  Also, compilers may do
dnl erratic things when invoked with flags meant for a different
dnl compiler.

dnl We attempt to strip out any flags that are already on CFLAGS.
dnl If an option needs more than one word (e.g. see Cray below) then
dnl they should be separated by hash signs (#), which will be converted
dnl to spaces before comparing and possibly adding to CFLAGS.
dnl This separator will need to be changed if a new compiler ever needs
dnl an option that includes a hash sign...

        # Tests for flags to enable C compiler warnings
        # GCC compatible
        AS_IF([test "x$GCC" = "xyes" &&
               "$CC" -c -Wall conftest.c > /dev/null 2>&1 &&
               test -f conftest.o],[dnl
          AS_IF([test "x$ansi" = "x"],
                [hts_cv_prog_cc_warnings="-Wall"],
                [hts_cv_prog_cc_warnings="-Wall -ansi -pedantic"])
        ],
        # Sun Studio or Solaris C compiler
        ["$CC" -V 2>&1 | $GREP -i -E "WorkShop|Sun C" > /dev/null 2>&1 &&
         "$CC" -c -v -Xc conftest.c > /dev/null 2>&1 &&
         test -f conftest.o],[dnl
        AS_IF([test "x$ansi" = "x"],
              [hts_cv_prog_cc_warnings="-v"],
              [hts_cv_prog_cc_warnings="-v -Xc"])
        ],
        # Digital Unix C compiler
        ["$CC" -V 2>&1 | $GREP -i "Digital UNIX Compiler" > /dev/null 2>&1 &&
         "$CC" -c -verbose -w0 -warnprotos -std1 conftest.c > /dev/null 2>&1 &&
         test -f conftest.o], [dnl
           AS_IF([test "x$ansi" = "x"],
                 [hts_cv_prog_cc_warnings="-verbose -w0 -warnprotos"],
                 [hts_cv_prog_cc_warnings="-verbose -w0 -warnprotos -std1"])
           ],
        # C for AIX Compiler
        ["$CC" 2>&1 | $GREP -i "C for AIX Compiler" > /dev/null 2>&1 &&
         "$CC" -c -qlanglvl=ansi -qinfo=all conftest.c > /dev/null 2>&1 &&
         test -f conftest.o],[dnl
        AS_IF([test "x$ansi" = "x"],
              [hts_cv_prog_cc_warnings="-qsrcmsg -qinfo=all:noppt:noppc:noobs:nocnd"],
              [hts_cv_prog_cc_warnings="-qsrcmsg -qinfo=all:noppt:noppc:noobs:nocnd -qlanglvl=ansi"])
        ],
        # IRIX C compiler
        ["$CC" -version 2>&1 | $GREP -i "MIPSpro Compilers" > /dev/null 2>&1 &&
         "$CC" -c -fullwarn -ansi -ansiE conftest.c > /dev/null 2>&1 &&
         test -f conftest.o],[dnl
           AS_IF([test "x$ansi" = "x"],
                 [hts_cv_prog_cc_warnings="-fullwarn"],
                 [hts_cv_prog_cc_warnings="-fullwarn -ansi -ansiE"])
          ],
        # HP-UX C compiler
        [what "$CC" 2>&1 | $GREP -i "HP C Compiler" > /dev/null 2>&1 &&
         "$CC" -c -Aa +w1 conftest.c > /dev/null 2>&1 &&
         test -f conftest.o],[dnl
        AS_IF([test "x$ansi" = "x"],
              [hts_cv_prog_cc_warnings="+w1"],
              [hts_cv_prog_cc_warnings="+w1 -Aa"])
        ],
        # The NEC SX series (Super-UX 10) C compiler
        ["$CC" -V 2>&1 | $GREP "/SX" > /dev/null 2>&1 &&
         "$CC" -c -pvctl[,]fullmsg -Xc conftest.c > /dev/null 2>&1 &&
         test -f conftest.o],[
        AS_IF([test "x$ansi" = "x"],
              [hts_cv_prog_cc_warnings="-pvctl[,]fullmsg"],
              [hts_cv_prog_cc_warnings="-pvctl[,]fullmsg -Xc"])
        ],
        # The Cray C compiler (Unicos)
        ["$CC" -V 2>&1 | $GREP -i "Cray" > /dev/null 2>&1 &&
         "$CC" -c -h msglevel_2 conftest.c > /dev/null 2>&1 &&
         test -f conftest.o],[dnl
        AS_IF([test "x$ansi" = "x"],
              [hts_cv_prog_cc_warnings="-h#msglevel_2"],
              [hts_cv_prog_cc_warnings="-h#msglevel_2,conform"])
        ],
	# The Tiny C Compiler
        ["$CC" -v 2>&1 | $GREP "tcc version" > /dev/null &&
         "$CC" -Wall -c conftest.c > /dev/null 2>&1 &&
         test -f conftest.o],[dnl
         hts_cv_prog_cc_warnings="-Wall"
        ])
        rm -f conftest.*
      ])
    ])

    AS_IF([test "x$hts_cv_prog_cc_warnings" != "x"],[
dnl Print result, with underscores as spaces
ac_arg_result=`echo "$hts_cv_prog_cc_warnings" | tr '#' ' '`
AC_MSG_RESULT($ac_arg_result)

dnl Add options to CFLAGS only if they are not already present
ac_arg_needed=""
for ac_arg in $hts_cv_prog_cc_warnings
do
  ac_arg_sp=`echo "$ac_arg" | tr '#' ' '`
  AS_CASE([" $CFLAGS "],
[*" $ac_arg_sp "*], [],
[ac_arg_needed="$ac_arg_all $ac_arg_sp"])
done
CFLAGS="$ac_arg_needed $CFLAGS"],[dnl
      AC_MSG_RESULT(unknown)
    ])
  ])
])
m4trace:m4/hts_prog_cc_warnings.m4:167: -1- AC_DEFUN([HTS_PROG_CC_WERROR], [
  AC_ARG_ENABLE([werror],
    [AS_HELP_STRING([--enable-werror], [change warnings into errors, where supported])],
    [],
    [enable_werror=no])

  AS_IF([test "x$enable_werror" != xno],[
    AC_MSG_CHECKING([for C compiler flags to error on warnings])
    AC_CACHE_VAL(hts_cv_prog_cc_werror, [dnl
      hts_cv_prog_cc_werror=""
      AS_IF([test "x$CC" != "x"],[
        cat > conftest.c <<EOF
int main(int argc, char **argv) { return 0; }
EOF

        AS_IF(dnl
	 # Tests for flags to make the C compiler treat warnings as errors
         # GCC compatible
         [test "x$GCC" = "xyes" &&
          "$CC" -c -Werror conftest.c > /dev/null 2>&1 &&
          test -f conftest.o],[hts_cv_prog_cc_werror="-Werror"],
         # Sun Studio or Solaris C compiler
         ["$CC" -V 2>&1 | $GREP -i -E "WorkShop|Sun C" > /dev/null 2>&1 &&
          "$CC" -c -errwarn=%all conftest.c > /dev/null 2>&1 &&
          test -f conftest.o],[hts_cv_prog_cc_werror="-errwarn=%all"],
	 # The Tiny C Compiler
         ["$CC" -v 2>&1 | $GREP "tcc version" > /dev/null &&
          "$CC" -Wall -c conftest.c > /dev/null 2>&1 &&
          test -f conftest.o],[hts_cv_prog_cc_werror="-Werror"]
         dnl TODO: Add more compilers
        )
        rm -f conftest.*
      ])
    ])
    AS_IF([test "x$hts_cv_prog_cc_werror" != x],[
      AC_MSG_RESULT($hts_cv_prog_cc_werror)
      AS_IF([test "x$1" != x],[eval AS_TR_SH([$1])="$hts_cv_prog_cc_werror"])
    ],[dnl
      AC_MSG_RESULT(unknown)
    ])
  ])
])
m4trace:configure.ac:33: -1- m4_include([m4/ax_check_compile_flag.m4])
m4trace:m4/ax_check_compile_flag.m4:39: -1- AC_DEFUN([AX_CHECK_COMPILE_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:configure.ac:34: -1- m4_include([m4/hts_hide_dynamic_syms.m4])
m4trace:m4/hts_hide_dynamic_syms.m4:36: -1- AC_DEFUN([HTS_TEST_CC_C_LD_FLAG], [AS_VAR_PUSHDEF([hts_cv_check_flag],[hts_cv_check_$1])dnl
  AC_CACHE_CHECK([whether the compiler accepts $1],
   [hts_cv_check_flag],
   [ac_check_save_cflags=$CFLAGS
    ac_check_save_ldflags=$LDFLAGS
    CFLAGS="$CFLAGS $1"
    LDFLAGS="$LDFLAGS $1"
    AC_LINK_IFELSE([AC_LANG_PROGRAM()],
      [AS_VAR_SET([hts_cv_check_flag],[yes])
       AS_IF([test "x$2" != x],[eval AS_TR_SH([$2])="$1"])],
      [AS_VAR_SET([hts_cv_check_flag],[no])])
    CFLAGS=$ac_check_save_cflags
    LDFLAGS=$ac_check_save_ldflags])
  AS_VAR_POPDEF([hts_cv_check_flag])dnl
])
m4trace:m4/hts_hide_dynamic_syms.m4:53: -1- AC_DEFUN([HTS_HIDE_DYNAMIC_SYMBOLS], [
  # Test for flags to set default shared library visibility to hidden
  # -fvisibility=hidden : GCC compatible
  # -xldscope=hidden    : SunStudio
  ac_opt_found=no
  m4_foreach_w([ac_opt],[-fvisibility=hidden -xldscope=hidden],
   [AS_IF([test "x$ac_opt_found" = "xno"],
     [HTS_TEST_CC_C_LD_FLAG(ac_opt,[ac_opt_found])])
   ])
  AS_IF([test "x$ac_opt_found" != "xno"],
   [CFLAGS="$CFLAGS $ac_opt_found"
    LDFLAGS="$LDFLAGS $ac_opt_found"])
])
m4trace:configure.ac:35: -1- m4_include([m4/pkg.m4])
m4trace:m4/pkg.m4:58: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:m4/pkg.m4:92: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:m4/pkg.m4:121: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:m4/pkg.m4:139: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $2])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
        AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
        AC_MSG_RESULT([no])
	m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	$3
fi[]dnl
])
m4trace:m4/pkg.m4:208: -1- AC_DEFUN([PKG_CHECK_MODULES_STATIC], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])
m4trace:m4/pkg.m4:226: -1- AC_DEFUN([PKG_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:248: -1- AC_DEFUN([PKG_NOARCH_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:267: -1- AC_DEFUN([PKG_CHECK_VAR], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])
m4trace:configure.ac:56: -1- AC_DEFUN([MSG_ERROR], [cat > config.mk <<'EOF'
ifneq ($(MAKECMDGOALS),distclean)
$(error Resolve configure error first)
endif
EOF
   AC_MSG_ERROR([$1], [$2])])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:65: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:68: -1- HTS_PROG_CC_WARNINGS
m4trace:configure.ac:68: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:71: -1- HTS_PROG_CC_WERROR([hts_late_cflags])
m4trace:configure.ac:75: -1- AX_CHECK_COMPILE_FLAG([-mssse3 -mpopcnt -msse4.1], [
  hts_cflags_sse4="-mssse3 -mpopcnt -msse4.1"
  AC_SUBST([hts_cflags_sse4])
  AC_DEFINE([HAVE_SSSE3],1,
            [Defined to 1 if the compiler can issue SSSE3 instructions.])
  AC_DEFINE([HAVE_POPCNT],1,
            [Defined to 1 if the compiler can issue popcnt instructions.])
  AC_DEFINE([HAVE_SSE4_1],1,
            [Defined to 1 if the compiler can issue SSE4.1 instructions.])
dnl Propagate HTSlib's unaligned access preference to htscodecs
  AH_VERBATIM([UBSAN],[
/* Prevent unaligned access in htscodecs SSE4 rANS codec */
#if defined(HTS_ALLOW_UNALIGNED) && HTS_ALLOW_UNALIGNED == 0
#undef UBSAN
#endif
  ])
  AC_DEFINE([UBSAN],1,[])
  ], [], [], [AC_LANG_PROGRAM([[
    #include "x86intrin.h"
  ]],[[
    unsigned int i = _mm_popcnt_u32(1);
    __m128i a = _mm_set_epi32(1, 2, 3, i), b = _mm_set_epi32(4, 3, 2, 1);
    __m128i c = _mm_max_epu32(a, b);
    b = _mm_shuffle_epi8(a, c);
    return *((char *) &b);
  ]])])
